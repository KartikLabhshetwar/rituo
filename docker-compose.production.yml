# Production Docker Compose for Digital Ocean deployment
version: '3.8'

services:
  rituo-backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: rituo-backend
    restart: unless-stopped
    ports:
      - "8000:8000"  # FastAPI REST API
      - "8001:8001"  # MCP Server
    environment:
      # Google OAuth Configuration
      - GOOGLE_OAUTH_CLIENT_ID=${GOOGLE_OAUTH_CLIENT_ID}
      - GOOGLE_OAUTH_CLIENT_SECRET=${GOOGLE_OAUTH_CLIENT_SECRET}
      
      # Server Configuration - Update these for your Digital Ocean deployment
      - PORT=8001
      - WORKSPACE_MCP_PORT=8001
      - API_PORT=8000
      - WORKSPACE_MCP_BASE_URI=https://your-domain.com  # Replace with your domain
      - GOOGLE_OAUTH_REDIRECT_URI=https://your-domain.com:8001/oauth2callback  # Replace with your domain
      
      # Database Configuration
      - MONGODB_URL=${MONGODB_URL}
      - DATABASE_NAME=rituo_app
      
      # AI Configuration (BYOK - Users provide their own keys)
      # - GROQ_API_KEY=${GROQ_API_KEY}  # Optional fallback key
      
      # MCP Configuration
      - MCP_ENABLE_OAUTH21=true
      - MCP_INTERNAL_MODE=true
      - MCP_SERVICE_TOKEN=internal-service-token
      
      # FastMCP Authentication
      - FASTMCP_SERVER_AUTH=GOOGLE
      - FASTMCP_SERVER_AUTH_GOOGLE_CLIENT_ID=${GOOGLE_OAUTH_CLIENT_ID}
      - FASTMCP_SERVER_AUTH_GOOGLE_CLIENT_SECRET=${GOOGLE_OAUTH_CLIENT_SECRET}
      - FASTMCP_SERVER_AUTH_GOOGLE_BASE_URL=https://your-domain.com:8001  # Replace with your domain
      - FASTMCP_SERVER_AUTH_GOOGLE_REQUIRED_SCOPES=openid,email,profile,https://www.googleapis.com/auth/calendar,https://www.googleapis.com/auth/gmail.readonly,https://www.googleapis.com/auth/gmail.send,https://www.googleapis.com/auth/tasks
      
      # Security
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Optional: Uncomment below to add Nginx reverse proxy for production
# Additional nginx.conf file would be needed
#  nginx:
#    image: nginx:alpine
#    container_name: rituo-nginx
#    restart: unless-stopped
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf:ro
#      - ./ssl:/etc/nginx/ssl:ro  # Mount SSL certificates
#    depends_on:
#      - rituo-backend
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "10m"
#        max-file: "3"
